version: '3'

services:
  django:
    build:
      context: django_service/.
    restart: always
    volumes:
      - ./django_service/:/usr/app/
      - static_volume:/usr/app/config/static:ro
    env_file:
      - ./.env
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:13
    volumes:
      - psql_data:/var/lib/psql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=movies
      - TZ='Europe/Moscow'

  movies_api:
    container_name: movies_api
    command: uvicorn main:app --host 0.0.0.0 --port 5000
    build: ./api_service
    image: movies_api
    depends_on:
      - movies_elastic
      - movies_redis
    env_file:
      - .env

  movies_redis:
    container_name: movies_redis
    image: redis:6.2.1

  movies_elastic:
    container_name: movies_elastic
    image: elasticsearch:7.12.0
    environment:
      - discovery.type=single-node

  etl:
    build:
      context: etl_service/.
    restart: always
    env_file:
      - ./.env
    depends_on:
      - postgres
      - movies_elastic

  nginx:
    image: nginx:1.19.2
    restart: always
    volumes:
      - ./site.conf:/etc/nginx/conf.d/site.conf:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/usr/app/config/static:ro
    depends_on:
      - django
      - movies_elastic
      - movies_api
    ports:
      - "80:80"

volumes:
  psql_data:
  static_volume:
